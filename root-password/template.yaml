AWSTemplateFormatVersion: '2010-09-09'

Transform: AWS::Serverless-2016-10-31

Resources:
  SesReceiverRules:
    Type: AWS::SES::ReceiptRuleSet
  EmailDomainReciever:
    Type: AWS::SES::ReceiptRule
    Properties:
      RuleSetName: !Ref SesReceiverRules
      Rule:
        Enabled: true
        Actions:
          - S3Action:
              BucketName: !Ref EmailBucket
          - LambdaAction:
              FunctionArn: !GetAtt EmailFunction.Arn
  EmailBucket:
    Type: AWS::S3::Bucket
  EmailBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref EmailBucket
      PolicyDocument:
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "AllowSESPuts",
              "Effect": "Allow",
              "Principal": {
                "Service": "ses.amazonaws.com"
              },
              "Action": "s3:PutObject",
              "Resource": !Sub "arn:aws:s3:::${EmailBucket}/*",
              "Condition": {
                "StringEquals": {
                  "aws:Referer": !Ref 'AWS::AccountId'
                }
              }
            }
          ]
        }
  EmailFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Handle Password Reset emails
      Runtime: nodejs8.10
      CodeUri: root-password.zip
      Handler: index.handler
      MemorySize: 512
      Timeout: 30
      Environment:
        Variables:
          EMAIL_BUCKET: !Ref EmailBucket
      Policies:
        - AmazonS3ReadOnlyAccess
        - AmazonSSMFullAccess
        - AWSOrganizationsReadOnlyAccess
  EmailFunctionPolicy:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref EmailFunction
      Principal: ses.amazonaws.com
      SourceAccount: !Ref AWS::AccountId
